C51 COMPILER V9.60.0.0   EFM8SB1_SMBUS_MASTER_MULTIBYTE                                    10/04/2024 01:57:06 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EFM8SB1_SMBUS_MASTER_MULTIBYTE
OBJECT MODULE PLACED IN .\src\EFM8SB1_SMBus_Master_Multibyte.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\Yoshida
                    -_Lab\SimplicityStudio\v5_workspace\test2\src\EFM8SB1_SMBus_Master_Multibyte.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) W
                    -ARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Yoshida_Lab\
                    -SimplicityStudio\v5_workspace\test2\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.3.1//Device/shared/si8
                    -051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.3.1//Device/EFM8SB1/inc) PRINT(.\src\EFM8SB1_SMBus_Mas
                    -ter_Multibyte.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\EFM8SB1_SMBus_Master_Multibyte.OBJ)

line level    source

   1          #include <SI_EFM8SB1_Register_Enums.h>                  // SI_SFR declarations
   2          #include "InitDevice.h"
   3          #include "EFM8SB1_SMBus_Master_Multibyte.h"
   4          
   5          //SDA:1.3
   6          //SCL:1.4
   7          
   8          sbit pin05 = P0^5;
   9          int send_data[3];
  10          int ms;
  11          int i;
  12          uint8_t slave;
  13          uint8_t send_data1;
  14          uint8_t send_data2;
  15          uint8_t max_count;
  16          uint8_t receive_data_first;
  17          uint8_t receive_data_second;
  18          
  19          void delay_ms (ms);
  20          void smbus0 (slave);//スレイブアドレスを送るだけ、読み込み用
  21          void smbus1 (slave,send_data1);//スレイブアドレスに加えて1つデータを送る
  22          void smbus2 (slave,send_data1, send_data2);//スレイブアドレスに加えて2つデータを送る
  23          void LCD_Init(void);//LCDの設定をする
  24          void LCD_Data(void);//LCDにデータを送る
  25          
  26          void SiLabs_Startup (void) {}
  27          int main (void)
  28          {
  29   1              enter_DefaultMode_from_RESET();
  30   1              enter_Mode2_from_DefaultMode();
  31   1              LCD_Init();
  32   1      
  33   1              while(1){
  34   2                  smbus1(0x90, 0x00); //2つデータを送信
  35   2                  smbus0(0x91); //1つデータを送信
  36   2            LCD_Data();
  37   2              }
  38   1      }
  39          
  40          void smbus0 (slave)
  41          {
  42   1        send_data[0] = slave;
  43   1        max_count = 0;
  44   1        SMB0CN0_STA = 1;
  45   1        delay_ms(10);
  46   1      }
  47          
  48          void smbus1 (slave, send_data1)
  49          {
  50   1        send_data[0] = slave;
  51   1        send_data[1] = send_data1;
C51 COMPILER V9.60.0.0   EFM8SB1_SMBUS_MASTER_MULTIBYTE                                    10/04/2024 01:57:06 PAGE 2   

  52   1        max_count = 1;
  53   1        SMB0CN0_STA = 1;
  54   1        delay_ms(10);
  55   1      }
  56          
  57          void smbus2 (slave, send_data1, send_data2)
  58          {
  59   1        send_data[0] = slave;
  60   1        send_data[1] = send_data1;
  61   1        send_data[2] = send_data2;
  62   1        max_count = 2;
  63   1        SMB0CN0_STA = 1;
  64   1        delay_ms(10);
  65   1      }
  66          
  67          void LCD_Init(){
  68   1        smbus2(0x7C, 0x00, 0x38);
  69   1        smbus2(0x7C, 0x00, 0x39);
  70   1        smbus2(0x7C, 0x00, 0x14);
  71   1        smbus2(0x7C, 0x00, 0x53);
  72   1        smbus2(0x7C, 0x00, 0x73);
  73   1        smbus2(0x7C, 0x00, 0x6C);
  74   1        smbus2(0x7C, 0x00, 0x0C);
  75   1        smbus2(0x7C, 0x00, 0x01);
  76   1      }
  77          
  78          void LCD_Data(){
  79   1        smbus2(0x7C, 0x00, 0x80);//場所の指定
  80   1        for(i = 7; i >= 0; i--) {
  81   2            char receive_data_bit =(receive_data_first>>i) & 1;
  82   2            if(receive_data_bit == 0){
  83   3                smbus2(0x7C, 0x40, 0x30);//文字コード 0
  84   3            }
  85   2            else{
  86   3                smbus2(0x7C, 0x40, 0x31);//文字コード 1
  87   3            }
  88   2        }
  89   1      
  90   1        for(i = 7; i >= 0; i--) {
  91   2            char receive_data_bit =(receive_data_second>>i) & 1;
  92   2            if(receive_data_bit == 0){
  93   3                smbus2(0x7C, 0x40, 0x30);//文字コード
  94   3            }
  95   2            else{
  96   3                smbus2(0x7C, 0x40, 0x31);//文字コード
  97   3            }
  98   2         }
  99   1      }
 100          
 101          void delay_ms (ms)
 102          {
 103   1         TCON &= ~0x30;                      // Stop Timer0; Clear TCON_TF0
 104   1         TMOD &= ~0x0f;                      // 16-bit free run mode
 105   1         TMOD |=  0x01;
 106   1      
 107   1         CKCON0 |= 0x04;                      // Timer0 counts SYSCLKs
 108   1      
 109   1         while (ms) {
 110   2            TCON_TR0 = 0;                         // Stop Timer0
 111   2            TH0 = ((-SYSCLK/1000) >> 8);     // Overflow in 1ms
 112   2            TL0 = ((-SYSCLK/1000) & 0xFF);
 113   2            TCON_TF0 = 0;                         // Clear overflow indicator
 114   2            TCON_TR0 = 1;                         // Start Timer0
C51 COMPILER V9.60.0.0   EFM8SB1_SMBUS_MASTER_MULTIBYTE                                    10/04/2024 01:57:06 PAGE 3   

 115   2            while (!TCON_TF0);                    // Wait for overflow
 116   2            ms--;                            // Update ms counter
 117   2         }
 118   1      
 119   1         TCON_TR0 = 0;                            // Stop Timer0
 120   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    339    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
